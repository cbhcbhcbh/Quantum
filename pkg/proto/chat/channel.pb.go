// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: chat/channel.proto

package chat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChannelRequest) Reset() {
	*x = CreateChannelRequest{}
	mi := &file_chat_channel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelRequest) ProtoMessage() {}

func (x *CreateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_channel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateChannelRequest) Descriptor() ([]byte, []int) {
	return file_chat_channel_proto_rawDescGZIP(), []int{0}
}

type CreateChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     uint64                 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AccessToken   string                 `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChannelResponse) Reset() {
	*x = CreateChannelResponse{}
	mi := &file_chat_channel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelResponse) ProtoMessage() {}

func (x *CreateChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_channel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelResponse.ProtoReflect.Descriptor instead.
func (*CreateChannelResponse) Descriptor() ([]byte, []int) {
	return file_chat_channel_proto_rawDescGZIP(), []int{1}
}

func (x *CreateChannelResponse) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *CreateChannelResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

var File_chat_channel_proto protoreflect.FileDescriptor

const file_chat_channel_proto_rawDesc = "" +
	"\n" +
	"\x12chat/channel.proto\x12\x04chat\"\x16\n" +
	"\x14CreateChannelRequest\"Y\n" +
	"\x15CreateChannelResponse\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\x04R\tchannelId\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken2\\\n" +
	"\x0eChannelService\x12J\n" +
	"\rCreateChannel\x12\x1a.chat.CreateChannelRequest\x1a\x1b.chat.CreateChannelResponse\"\x00B\rZ\v./chat;chatb\x06proto3"

var (
	file_chat_channel_proto_rawDescOnce sync.Once
	file_chat_channel_proto_rawDescData []byte
)

func file_chat_channel_proto_rawDescGZIP() []byte {
	file_chat_channel_proto_rawDescOnce.Do(func() {
		file_chat_channel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_channel_proto_rawDesc), len(file_chat_channel_proto_rawDesc)))
	})
	return file_chat_channel_proto_rawDescData
}

var file_chat_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chat_channel_proto_goTypes = []any{
	(*CreateChannelRequest)(nil),  // 0: chat.CreateChannelRequest
	(*CreateChannelResponse)(nil), // 1: chat.CreateChannelResponse
}
var file_chat_channel_proto_depIdxs = []int32{
	0, // 0: chat.ChannelService.CreateChannel:input_type -> chat.CreateChannelRequest
	1, // 1: chat.ChannelService.CreateChannel:output_type -> chat.CreateChannelResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chat_channel_proto_init() }
func file_chat_channel_proto_init() {
	if File_chat_channel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_channel_proto_rawDesc), len(file_chat_channel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_channel_proto_goTypes,
		DependencyIndexes: file_chat_channel_proto_depIdxs,
		MessageInfos:      file_chat_channel_proto_msgTypes,
	}.Build()
	File_chat_channel_proto = out.File
	file_chat_channel_proto_goTypes = nil
	file_chat_channel_proto_depIdxs = nil
}
